name: CI / Build & Release
on:
  push:
    branches:
      - master

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Make Gradle wrapper executable
        run: chmod +x gradlew

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '24'



      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*','**/gradlewrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Get project version
        id: get_version
        run: |
          VERSION=$(grep '^version=' gradle.properties | cut -d'=' -f2)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Build (run tests and create fat JAR)
        run: ./gradlew --no-daemon clean build
        env:
          JAVA_HOME: ${{ env.JAVA_HOME_24_X64 || '' }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          release_name: Release v${{ steps.get_version.outputs.VERSION }}
          body: Automated release for version ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false

      - name: Upload artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/libs/TodoApp-${{ steps.get_version.outputs.VERSION }}.jar
          asset_name: todo-app-${{ steps.get_version.outputs.VERSION }}.jar
          asset_content_type: application/java-archive

